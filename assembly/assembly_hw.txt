section	.text
	global _start       ;must be declared for using gcc
_start:                     ;tell linker entry point
    ; move the data to registers
    mov eax, [num1]
    mov ebx, [num2]
    ; add num1 and num2 and store in register A,eax
    add eax, ebx
    mov ebx, [num3]    ; store num3 in register b
    add eax, ebx       ; add eax and ebx
    add eax, '0'       ; convert    
    mov [sum], eax
    
    ; print message
	mov	edx, len    ;message length
	mov	ecx, msg   ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel
	
	; print sum
	mov	edx, 1    ;message length
	mov	ecx, sum   ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel
	
	; exit
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel
	
    ; initialized data
section	.data

    msg	db	'The sum is: ', 0xa	;our dear string
    len	equ	$ - msg			;length of our dear string
    
    num1 db 1
    num2 db 3
    num3 db 3

    ; uninitialized data
section .bss
    sum  resb 1
